openapi: 3.0.0
info:
  title: Asset Management API
  description: API for managing Assets with various operations such as creating, updating, deleting, and fetching Assets.
  version: 1.0.0
servers:
  - url: https://h73q45ao7a.execute-api.eu-central-1.amazonaws.com/dev/
    description: Development API server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AssetCreate:
      type: object
      properties:
        asset_name:
          type: string
          maxLength: 255
          nullable: true
          example: "Asset Unique Name"
        pref_time:
          type: string
          format: time
          nullable: true
          example: "08:00"
        pref_end_time:
          type: string
          format: time
          nullable: true
          example: "12:00"
        services:
          type: array
          items:
            type: integer
          example: [69, 70]
        sector_id:
          type: integer
          example: 1
        overlap_x:
          type: string
          maxLength: 45
          example: "90"
        overlap_y:
          type: string
          maxLength: 45
          nullable: true
          example: "80"
        shape:
          type: string
          enum:
            - polygon
            - circle
          maxLength: 50
          example: "polygon"
        group_name:
          type: string
          maxLength: 45
          nullable: true
          example: "Group A"
        geolocation:
          type: string
          maxLength: 255
          nullable: true
          example: "GRX6+X2 Mitzpe Ramon, Israel"
        is_hidden:
          type: boolean
          example: false
      required:
        - shape
      oneOf:
        # Case where shape is polygon
        - properties:
            shape:
              type: string
              enum:
                - polygon
            polygon:
              type: array
              items:
                type: array
                items:
                  type: number
                example: [40.714557, -74.046242]
              example:
                - [40.714557, -74.046242]
                - [42.714557, -72.046242]
                - [43.714557, -70.046242]
                - [40.714557, -74.046242]
          required: ["polygon"]
          # No radius or center fields allowed here

        # Case where shape is circle
        - properties:
            shape:
              type: string
              enum:
                - circle
            radius:
              type: integer
              example: 100
            center:
              type: array
              items:
                type: number
              example: [40.714557, -74.046242]
          required: ["radius", "center"]
          # No polygon field allowed here

    AssetDetails:
      type: object
      properties:
        id:
          type: integer
          example: 123
        asset_name:
          type: string
          maxLength: 255
          nullable: true
          example: "Asset Unique Name"
        pref_time:
          type: string
          format: time
          nullable: true
          example: "08:00"
        pref_end_time:
          type: string
          format: time
          nullable: true
          example: "12:00"
        services:
          type: array
          items:
            type: integer
          example: [69, 70]
        overlap_x:
          type: string
          maxLength: 45
          example: "90"
        overlap_y:
          type: string
          maxLength: 45
          nullable: true
          example: "90"
        shape:
          type: string
          enum:
            - polygon
            - circle
          maxLength: 50
          example: "polygon"
        group_name:
          type: string
          maxLength: 45
          nullable: true
          example: "Group A"
        geolocation:
          type: string
          maxLength: 255
          nullable: true
          example: "GRX6+X2 Mitzpe Ramon, Israel"
        is_hidden:
          type: boolean
          example: false
          
    ScheduleCreate:
        type: object
        properties:
          frequency:
            type: integer
            nullable: false
            example: 1
          asset_id:
            type: integer
            nullable: false
            example: 70
          days_arr:
            type: array
            items:
              type: integer
            example: [1, 2, 3]
          preferred_time:
            type: string
            format: time
            nullable: false
            example: "08:00"
          active:
            type: boolean
            nullable: false
            example: true
          due_date:
            type: string
            format: date-time
            nullable: false
            example: "2024-10-06 18:16:32.473956"
            
    ScheduleUpdate:
        type: object
        properties:
          frequency:
            type: integer
            nullable: false
            example: 1
          days_arr:
            type: array
            items:
              type: integer
            example: [1, 2, 3]
          preferred_time:
            type: string
            format: time
            nullable: false
            example: "08:00"
          active:
            type: boolean
            nullable: false
            example: true
          due_date:
            type: string
            format: date-time
            nullable: false
            example: "2024-10-06 18:16:32.473956"
            
    ScheduleDetails:
        type: object
        properties:
          id:
            type: integer
            example: 123
          frequency:
              type: integer
              nullable: false
              example: 1
          asset_id:
            type: integer
            nullable: false
            example: 69
          days_arr:
            type: array
            items:
              type: integer
            example: [1, 2, 3]
          preferred_time:
            type: string
            format: time
            nullable: false
            example: "08:00"
          active:
            type: boolean
            nullable: false
            example: true
          due_date:
            type: string
            format: date-time
            nullable: false
            example: "2024-10-06 18:16:32.473956"
            
  responses:
    BadRequest:
      description: Bad Request - Invalid or missing input.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "MissingKeyInBody, InvalidInput, FailedInProgress, InvalidValueProvided"
    NotFound:
      description: Resource Not Found.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "NotFound - The specified resource ID was not found."

security:
  - BearerAuth: []

paths:
  /asset-management/customer/assets:
    post:
      tags: 
      - Asset
      summary: Create new Assets
      description: Create a new set of Assets with provided details.
      operationId: createAssets
      security:
        - BearerAuth: []
      requestBody:
        description: List of Assets to be created.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AssetCreate'
      responses:
        201:
          description: Assets created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

    get:
      tags: 
      - Asset
      summary: Get all Assets
      description: Retrieves a list of all Assets.
      operationId: getAssets
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to retrieve.
        - in: query
          name: per_page
          schema:
            type: integer
          description: The number of tasks per page.
        - in: query
          name: sort_by
          schema:
            type: string
          description: The field to sort by (e.g., 'name', 'price', 'create_time').
        - in: query
          name: sort_direction
          schema:
            type: string
            enum: [asc, desc]
          description: The direction of sorting (ascending or descending).
      responses:
        200:
          description: List of Assets retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetDetails'

  /asset-management/customer/assets/{id}:
    get:
      tags: 
      - Asset
      summary: Get an Asset
      description: Get an existing Asset by its ID.
      operationId: getAsset
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Asset ID to get.
          schema:
            type: integer
      responses:
        200:
          description: Asset retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

    delete:
      tags: 
      - Asset
      summary: Delete an Asset
      description: Delete an existing Asset by its ID.
      operationId: deleteAsset
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Asset ID to delete.
          schema:
            type: integer
      responses:
        204:
          description: Asset deleted successfully.
        404:
          $ref: '#/components/responses/NotFound'

    put:
      tags: 
      - Asset
      summary: Update an Asset
      description: Update an existing Asset by its ID.
      operationId: updateAsset
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Asset ID to update.
          schema:
            type: integer
      requestBody:
        description: Updated details of the Asset.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreate'
      responses:
        200:
          description: Asset updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
          
  /asset-management/customer/schedule-cron:
    post: 
      tags: 
      - Schedule
      summary: Create new Schedule for Asset
      description: Create new schedule for an asset with provided details.
      operationId: createSchedule
      security:
        - BearerAuth: []
      requestBody:
        description: List of Assets to be created.
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/ScheduleCreate'
      responses:
        201:
          description: Schedule created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

    get:
      tags: 
      - Schedule
      summary: Get all Schedules per customer
      description: Retrieves a list of all Schedules of the current customer.
      operationId: getSchedules
      security:
        - BearerAuth: []
      responses:
        200:
          description: List of Schedules retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduleDetails'

  /asset-management/customer/schedule-cron/{id}:
    get:
      tags: 
      - Schedule
      summary: Get Schedule by ID
      description: Get an existing Schedule by its ID.
      operationId: getSchedule
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Schedule ID to get.
          schema:
            type: integer
      responses:
        200:
          description: Schedule retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

    delete:
      tags: 
      - Schedule
      summary: Delete a Schedule
      description: Delete an existing Schedule by its ID.
      operationId: deleteSchedule
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Schedule ID to delete.
          schema:
            type: integer
      responses:
        204:
          description: Schedule deleted successfully.
        404:
          $ref: '#/components/responses/NotFound'

    put:
      tags: 
      - Schedule
      summary: Update a Schedule
      description: Update an existing Schedule by its ID.
      operationId: updateSchedule
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Schedule ID to update.
          schema:
            type: integer
      requestBody:
        description: Updated details of the Schedule.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdate'
      responses:
        200:
          description: Asset updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleDetails'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
